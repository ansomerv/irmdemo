name: Sync GitHub Labels to IRM Incident

on:
  issues:
    types: [labeled]

jobs:
  sync-label:
    runs-on: ubuntu-latest
    env:
      IRM_API_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY_INCIDENT }}
      STACK_URL: https://ep.amer.cloud.demokit.grafana.com

    steps:
      - name: Extract IRM Incident ID
        id: extract
        run: |
          body="${{ github.event.issue.body }}"
          irm_incident_id=$(echo "$body" | tr -d '\r' | grep -Eio 'incident[ _]?id[^0-9]*[0-9]+' | grep -Eo '[0-9]+' | head -n1)
          if [ -z "$irm_incident_id" ]; then
            echo "No IRM Incident ID found, skipping sync."
            exit 0
          fi
          echo "IRM Incident ID: $irm_incident_id"
          echo "irm_incident_id=$irm_incident_id" >> $GITHUB_OUTPUT

      - name: Parse Label Key/Value
        id: parse
        run: |
          label="${{ github.event.label.name }}"
          if [[ "$label" == *:* ]]; then
            key="${label%%:*}"
            value="${label#*:}"
          else
            key="githubLabel"
            value="$label"
          fi
          echo "Key: $key"
          echo "Value: $value"
          echo "key=$key" >> $GITHUB_OUTPUT
          echo "value=$value" >> $GITHUB_OUTPUT

      - name: Get existing IRM fields
        id: getfields
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer $IRM_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{}' \
            "$STACK_URL/api/plugins/grafana-irm-app/resources/api/FieldsService.GetFields" \
            -o fields.json

          echo "Fetched existing IRM fields:"
          jq '.fields | length' fields.json || echo "No fields returned."

      - name: Create or update IRM field + option, then add label
        run: |
          key="${{ steps.parse.outputs.key }}"
          value="${{ steps.parse.outputs.value }}"
          irm_incident_id="${{ steps.extract.outputs.irm_incident_id }}"

          # Check if field exists
          field_uuid=$(jq -r --arg key "$key" '(.fields // .)[] | select(.name==$key and .domainName=="labels") | .uuid' fields.json)
          if [ -z "$field_uuid" ] || [ "$field_uuid" == "null" ]; then
            echo "Creating new label field '$key' in IRM"
            curl -s -X POST \
              -H "Authorization: Bearer $IRM_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{\"field\":{\"name\":\"$key\",\"slug\":\"$key\",\"type\":\"single-select\",\"domainName\":\"labels\",\"source\":\"incident\",\"archived\":false,\"version\":1,\"selectoptions\":[]}}" \
              "$STACK_URL/api/plugins/grafana-irm-app/resources/api/FieldsService.AddField" > /dev/null

            sleep 2
            field_uuid=$(curl -s -X POST \
              -H "Authorization: Bearer $IRM_API_KEY" \
              -H "Content-Type: application/json" \
              -d '{}' \
              "$STACK_URL/api/plugins/grafana-irm-app/resources/api/FieldsService.GetFields" | \
              jq -r --arg key "$key" '(.fields // .)[] | select(.name==$key) | .uuid')
          fi

          if [ -z "$field_uuid" ] || [ "$field_uuid" == "null" ]; then
            echo "❌ Failed to find or create field UUID for key '$key'"
            exit 1
          fi

          # Check if value already exists
          option_exists=$(jq -r --arg key "$key" --arg value "$value" '(.fields // .)[] | select(.name==$key) | .selectoptions[]? | select(.value==$value)' fields.json)
          if [ -z "$option_exists" ]; then
            echo "Adding new select option '$value' to field '$key'"
            uuid=$(uuidgen)
            len=${#uuid}
            if [ "$len" -ne 36 ]; then
              echo "Generated UUID invalid length ($len)."
              exit 1
            fi
            curl -s -X POST \
              -H "Authorization: Bearer $IRM_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{\"fieldUUID\":\"$field_uuid\",\"fieldSelectOption\":{\"uuid\":\"$uuid\",\"value\":\"$value\",\"label\":\"$value\",\"source\":\"incident\",\"color\":\"\",\"icon\":\"tag-alt\"}}" \
              "$STACK_URL/api/plugins/grafana-irm-app/resources/api/FieldsService.AddFieldSelectOption" > /dev/null
          else
            echo "Select option '$value' already exists under '$key'."
          fi

          # Add label to incident
          echo "Applying label '$key=$value' to IRM incident $irm_incident_id"
          curl -s -X POST \
            -H "Authorization: Bearer $IRM_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"incidentID\":\"$irm_incident_id\",\"label\":{\"colorHex\":\"#ff0000\",\"description\":\"Added from GitHub label sync\",\"key\":\"$key\",\"label\":\"$value\"}}" \
            "$STACK_URL/api/plugins/grafana-irm-app/resources/api/v1/IncidentsService.AddLabel" > /dev/null

          echo "✅ Done syncing label."
